name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      versionType:
        description: 'Version bump type (major, minor, patch)'
        required: true

jobs:
  pre-approval:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get and log current version number
        run: echo "Current version is $(jq -r '.version' package.json)"

  test-and-build:
    needs: pre-approval
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test
      - name: Build
        run: npm run build
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/

  request-approval:
    needs: test-and-build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
    steps:
      - name: Request Approval
        run: echo "Approval needed to proceed to the next job."

  publish:
    needs: request-approval
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Create package.json for dist
        run: jq '.name = .name + "-dist"' package.json > dist/package.json
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Publish to NPM
        run: cd dist && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}